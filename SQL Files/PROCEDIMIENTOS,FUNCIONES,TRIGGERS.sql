--------------------PROCEDIMIENTO AGREGAR A ESTADO-----------------------------------------------------
CREATE PROCEDURE AGREGAR_ESTADO @NOMBRE VARCHAR(25),@ABREVIATURA VARCHAR(5) AS
INSERT INTO ESTADO(NOMBRE,ABREVIATURA) VALUES (UPPER(@NOMBRE),UPPER(@ABREVIATURA))
------------------------VALIDACION-----------------------------------------------------
CREATE TRIGGER AGREGARESTADO ON ESTADO 
FOR INSERT,UPDATE 
AS
IF(EXISTS(SELECT ES.NOMBRE 
          FROM   inserted AS ES 
          GROUP BY ES.NOMBRE
          HAVING  1 < ANY           (SELECT COUNT(*)
		                             FROM ESTADO AS EST
									WHERE ES.NOMBRE=NOMBRE 
									 GROUP BY EST.NOMBRE
									 )
	     
		  			        )  )
  BEGIN
    ROLLBACK TRAN
    RAISERROR('EL ESTADO YA EXISTE DENTRO DE LA BASE DE DATOS', 16, 1)
  END
-----------------------------------CAMPO DE PRUEBA-------------------------------------------------------
EXEC AGREGAR_ESTADO 'CAMPECHE','Camp'
EXEC AGREGAR_ESTADO 'Chiapas','CHP'
EXEC AGREGAR_ESTADO 'TAMAULIPAS','TAM'
EXEC AGREGAR_ESTADO 'NUEVO LEON','NLE'
EXEC AGREGAR_ESTADO 'TEXAS','TEX'
EXEC AGREGAR_ESTADO 'CALIFORNIA','CAL'
--------------------------------PROCEDIMIENTO AGREGAR CIUDAD-*--------+-------------
CREATE PROCEDURE AGREGAR_CIUDAD @NOMBRE VARCHAR(25) AS

INSERT INTO CIUDAD(NOMBRE) VALUES (UPPER(@NOMBRE))
-------------------------------VALIDACION--------------------------------------
CREATE TRIGGER AGREGARCIUDAD ON CIUDAD 
FOR INSERT,UPDATE 
AS
IF(EXISTS(SELECT ES.NOMBRE 
          FROM   inserted AS ES 
          GROUP BY ES.NOMBRE
          HAVING  1 < ANY           (SELECT COUNT(*)
		                             FROM CIUDAD AS EST
									WHERE ES.NOMBRE=NOMBRE 
									 GROUP BY EST.NOMBRE
									 )
	     
		  			        )  )
  BEGIN
    ROLLBACK TRAN
    RAISERROR('LA CIUDAD YA EXISTE EN LA BASE DE DATOS', 16, 1)
  END
 ---------------------------EJEMPLO--------------
 EXEC AGREGAR_CIUDAD 'NUEVO LAREDO'
 EXEC AGREGAR_CIUDAD 'Carmen'
 EXEC AGREGAR_CIUDAD 'Abasolo'
 EXEC AGREGAR_CIUDAD 'Tuxtla Gutiérrez'
 EXEC AGREGAR_CIUDAD 'LAREDO'--San Francisco
 EXEC AGREGAR_CIUDAD 'San Francisco'--Tampico
 EXEC AGREGAR_CIUDAD 'TAMPICO'
----------------------------------AGREGAR PAIS--------------------
CREATE PROCEDURE AGREGAR_PAIS @NOMBRE VARCHAR(25) AS
INSERT INTO PAIS(NOMBRE) VALUES (UPPER(@NOMBRE))
-------------------------------VALIDACION--------------------------------------
CREATE TRIGGER AGREGARPAIS ON PAIS
FOR INSERT,UPDATE 
AS
IF(EXISTS(SELECT ES.NOMBRE 
          FROM   inserted AS ES 
          GROUP BY ES.NOMBRE
          HAVING  1 < ANY           (SELECT COUNT(*)
		                             FROM PAIS AS EST
									WHERE ES.NOMBRE=NOMBRE 
									 GROUP BY EST.NOMBRE
									 )
	     
		  			        )  )
  BEGIN
    ROLLBACK TRAN
    RAISERROR('EL PAIS YA EXISTE EN LA BASE DE DATOS', 16, 1)
  END 
  --------------PRUEBA---------------------------
  EXEC AGREGAR_PAIS 'MEXICO'
  EXEC AGREGAR_PAIS 'ESTADOS UNIDOS'
  ---------------------PAIS-ESTADO----------------------------------------------------------
  CREATE PROCEDURE AGREGAR_PAIS_ESTADO @PAIS INT,@ESTADO INT AS
INSERT INTO PAIS_ESTADO(IDESTADO,IDPAIS) VALUES (@ESTADO,@PAIS)
----------------------------------PRUEBA-------------------------------------------------
exec AGREGAR_PAIS_ESTADO 1,1
exec AGREGAR_PAIS_ESTADO 1,2
exec AGREGAR_PAIS_ESTADO 1,3
exec AGREGAR_PAIS_ESTADO 1,4
exec AGREGAR_PAIS_ESTADO 2,5
exec AGREGAR_PAIS_ESTADO 2,6

-------------------ESTAD0_CIUDAD------------------------------------
  CREATE PROCEDURE AGREGAR_ESTADO_CIUDAD @ESTADO INT,@CIUDAD INT AS
  INSERT INTO ESTADO_CIUDAD(IDESTADO,IDCIUDAD) VALUES (@ESTADO,@CIUDAD)
  --------------------PRUEBA--------------------------------
  EXEC AGREGAR_ESTADO_CIUDAD 1,2
  EXEC AGREGAR_ESTADO_CIUDAD 3,1
  EXEC AGREGAR_ESTADO_CIUDAD 4,3
  EXEC AGREGAR_ESTADO_CIUDAD 2,4
  EXEC AGREGAR_ESTADO_CIUDAD 5,5
  EXEC AGREGAR_ESTADO_CIUDAD 6,6
  EXEC AGREGAR_ESTADO_CIUDAD 3,7
  ---------------------------AGREGAR IMAGEN--------------
   CREATE PROCEDURE AGREGAR_IMAGEN @IMAGEN IMAGE AS
  INSERT INTO IMAGENES(IMAGEN) VALUES (@IMAGEN)
  ---------------AGREGAR USUARIO---------------------------------
    CREATE PROCEDURE AGREGAR_USUARIO @NOMBREDELPERFIL VARCHAR(50),@APPATERNO VARCHAR(20)
	,@APMATERNO VARCHAR(20),@NOMBRE VARCHAR(20),@FECHANACIMIENTO DATE,@CORREO VARCHAR(255)
	,@DESCRIPCION VARCHAR(255),@IDPAIS INT,@IDESTADO INT,@IDCIUDAD INT,@IDIMAGEN INT AS

  INSERT INTO USUARIOS(NOMBREPERFIL,APPATERNO,APMATERNO,NOMBRE,FECHANACIMIENTO,
  CORREOELECTRONICO,DESCRIPCION,IDPAIS,IDESTADO,IDCIUDAD,IDIMAGEN) 
  VALUES (@NOMBREDELPERFIL,@APPATERNO,@APMATERNO,@NOMBRE,@FECHANACIMIENTO,@CORREO,
  @DESCRIPCION,@IDPAIS,@IDESTADO,@IDCIUDAD,@IDIMAGEN)
  
  ---------------------------MODIFICACION TABLA IMAGENES---------------------------------------
 alter table IMAGENES ADD  UBICACIONIMAGEN VARCHAR(50) NOT NULL DEFAULT'C:\Users\Angel\Pictures\Usuario.jpg'
 alter table imagenes DROP COLUMN IMAGEN
  --------------PRUEBA DE AGREGAR USUARIOS---------------------
  CREATE PROCEDURE AGREGAR_USUARIO2 @NOMBREDELPERFIL VARCHAR(50),@APPATERNO VARCHAR(20)
	,@APMATERNO VARCHAR(20),@NOMBRE VARCHAR(20),@FECHANACIMIENTO DATE,@CORREO VARCHAR(255)
	,@DESCRIPCION VARCHAR(255),@PAIS VARCHAR(50),@ESTADO VARCHAR(50),@CIUDAD VARCHAR(50),@UBICACIONIMAGEN VARCHAR(50) AS
	 INSERT INTO IMAGENES(UBICACIONIMAGEN)VALUES (@UBICACIONIMAGEN)
	 declare @IDIMAGEN int
    set @IDIMAGEN=( SELECT TOP 1 P.IDIMAGEN
	                FROM  IMAGENES AS P
				    WHERE P.UBICACIONIMAGEN=@UBICACIONIMAGEN)
				

	declare @IDPAIS int
    set @IDPAIS=( SELECT P.IDPAIS
	              FROM  PAIS AS P
				  WHERE NOMBRE=@PAIS)

	declare @IDESTADO int
    set @IDESTADO=(SELECT P.IDESTADO
	              FROM  ESTADO AS P
				  WHERE P.NOMBRE=@ESTADO)

	declare @IDCIUDAD int
    set @IDCIUDAD=(SELECT P.IDCIUDAD
	              FROM  CIUDAD AS P
				  WHERE NOMBRE=@CIUDAD)

 INSERT INTO USUARIOS(NOMBREPERFIL,APPATERNO,APMATERNO,NOMBRE,FECHANACIMIENTO,
  CORREOELECTRONICO,DESCRIPCION,IDPAIS,IDESTADO,IDCIUDAD,IDIMAGEN) 
  VALUES (UPPER(@NOMBREDELPERFIL),UPPER(@APPATERNO),UPPER(@APMATERNO),UPPER(@NOMBRE),UPPER(@FECHANACIMIENTO),UPPER(@CORREO),
  UPPER(@DESCRIPCION),@IDPAIS,@IDESTADO,@IDCIUDAD,@IDIMAGEN)
  ---------------VALIDACION--------------------------------------------------------------------------------------------
  CREATE TRIGGER AGREGARUSUARIO ON USUARIOS
FOR INSERT,UPDATE 
AS
IF(EXISTS(SELECT ES.NOMBREPERFIL
          FROM   inserted AS ES 
          GROUP BY ES.NOMBREPERFIL
          HAVING  1 < ANY           (SELECT COUNT(*)
		                             FROM USUARIOS AS EST
									WHERE ES.NOMBREPERFIL=EST.NOMBREPERFIL
									 GROUP BY EST.NOMBREPERFIL
									 )
	     
		  			        )  )
  BEGIN
    ROLLBACK TRAN
    RAISERROR('EL PERFIL YA EXISTE', 16, 1)
  END
  IF(EXISTS(SELECT ES.CORREOELECTRONICO
          FROM   inserted AS ES 
          GROUP BY ES.CORREOELECTRONICO
          HAVING  1 < ANY           (SELECT COUNT(*)
		                             FROM USUARIOS AS EST
									WHERE ES.CORREOELECTRONICO=EST.CORREOELECTRONICO
									 GROUP BY EST.CORREOELECTRONICO
									 )
	     
		  			        )  )
  BEGIN
    ROLLBACK TRAN
    RAISERROR('EL CORREO YA TIENE UN PERFIL ASIGNADO', 16, 1)
  END  

  --------------AGREGAR VENTA---------------------------------------------------------------------------
  CREATE PROCEDURE AGREGAR_VENTA @FECHA DATE,@IDMETODODEPAGO TINYINT,@IDUSUARIO INT AS
  INSERT INTO VENTAS(FECHAVENTA,IDMETODOPAGO,IDUSUARIO) VALUES (GETDATE(),@IDMETODODEPAGO,@IDUSUARIO)
  -------------AGREGAR METODO DE PAGO--------------------------------------------------------------------
  CREATE PROCEDURE AGREGAR_METODOPAGO @DESCRIPCION VARCHAR(25) AS
  INSERT INTO METODOPAGO(DESCRIPCION)VALUES(@DESCRIPCION)
  ---------------------PRUEBA----------------------------------
  EXEC AGREGAR_METODOPAGO 'EFECTIVO'
    EXEC AGREGAR_METODOPAGO 'TARJETA CREDITO'
  ---------VENTAS_JUEGOS---------------------------------------------------------------------------------
  CREATE PROCEDURE AGREGAR_VENTAS_JUEGOS @IDVENTA INT ,@IDJUEGO INT AS
  INSERT INTO VENTAS_JUEGOS(IDVENTA,IDJUEGO) VALUES (@IDVENTA,@IDJUEGO)
  ---------------create funcion======================
  select CI.NOMBRE
  from CIUDAD AS CI
  JOIN ESTADO_CIUDAD AS ESTCIU ON(ESTCIU.IDCIUDAD=CI.IDCIUDAD)
  JOIN ESTADO AS EST ON(EST.IDESTADO=ESTCIU.IDESTADO)
  WHERE EST.NOMBRE='TAMAULIPAS'
 -----------------------------MODIFICAR TABLA DESCRIPCION------------------------------------------
 ALTER TABLE CLASIFICACIONES ADD NOMBRE VARCHAR(50) NOT NULL DEFAULT ''

 ALTER TABLE CLASIFICACIONES ALTER COLUMN DESCRIPCION VARCHAR(100) NOT NULL 
 --------------------------AGREGAR DESCRIPCION-----------------------------------------------------
  CREATE PROCEDURE AGREGAR_CLASIFICACION @NOMBRE VARCHAR(50),@DESCRIPCION VARCHAR(100)AS
  INSERT INTO CLASIFICACIONES(NOMBRE,DESCRIPCION) VALUES (UPPER(@NOMBRE),UPPER(@DESCRIPCION))
  --------------PRUEBA-----------------------------------------------------------------------------
    EXEC AGREGAR_CLASIFICACION 'TODOS','El contenido por lo general es apto para todas las edades. '
    EXEC AGREGAR_CLASIFICACION 'TODOS +10','El contenido por lo general es apto para personas de 10 años o más. '
	EXEC AGREGAR_CLASIFICACION 'ADOLESCENTES','El contenido por lo general es apto para personas de 13 años o más. '
	EXEC AGREGAR_CLASIFICACION 'MADURO','El contenido por lo general es apto para personas de 17 años o más.'
	EXEC AGREGAR_CLASIFICACION 'ADULTOS ÚNICAMENTE','El contenido es apto sólo para adultos de 18 años o más.'
	EXEC AGREGAR_CLASIFICACION 'CLASIFICACIÓN PENDIENTE','No se ha asignado una calificación final de ESRB.'
	SELECT *
	FROM CLASIFICACIONES
	SELECT *
	FROM SISTEMASOPERATIVOS
	
-------------------------AGREGAR SISTEMA OPERATIVO----------------------------------------------------
  CREATE PROCEDURE AGREGAR_SISTEMAOPERATIVO @NOMBRE VARCHAR(50)AS
  INSERT INTO SISTEMASOPERATIVOS(NOMBRE) VALUES (UPPER(@NOMBRE))
  -----------------------VALIDACION---------------------------------------------------------------------
  CREATE TRIGGER AGREGARSISTEMAOPERATIVO ON SISTEMASOPERATIVOS
FOR INSERT,UPDATE 
AS
IF(EXISTS(SELECT ES.NOMBRE
          FROM   inserted AS ES 
          GROUP BY ES.NOMBRE
          HAVING  1 < ANY           (SELECT COUNT(*)
		                             FROM SISTEMASOPERATIVOS AS EST
									WHERE ES.NOMBRE=EST.NOMBRE
									 GROUP BY EST.NOMBRE
									 )
	     
		  			        )  )
  BEGIN
    ROLLBACK TRAN
    RAISERROR('EL SISTEMA OPERATIVO YA EXISTE ', 16, 1)
  END
  --------------------EJEMPLO------------------------
  EXEC AGREGAR_SISTEMAOPERATIVO 'WINDOWS XP'
  EXEC AGREGAR_SISTEMAOPERATIVO 'WINDOWS 7'
  EXEC AGREGAR_SISTEMAOPERATIVO 'WINDOWS 10'
  EXEC AGREGAR_SISTEMAOPERATIVO 'WINDOWS  8'
  EXEC AGREGAR_SISTEMAOPERATIVO 'WINDOWS  8.1'
  EXEC AGREGAR_SISTEMAOPERATIVO 'MAC'
  -----------------------------AGREGAR IDIOMA---------------------------------
  CREATE PROCEDURE AGREGAR_IDIOMA @NOMBRE VARCHAR(25)AS
  INSERT INTO IDIOMAS(NOMBREIDIOMA) VALUES (UPPER(@NOMBRE))
  -----------------------VALIDACION---------------------------------------------------------------------
  CREATE TRIGGER AGREGARIDIOMA ON IDIOMAS
FOR INSERT,UPDATE 
AS
IF(EXISTS(SELECT ES.NOMBREIDIOMA
          FROM   inserted AS ES 
          GROUP BY ES.NOMBREIDIOMA
          HAVING  1 < ANY           (SELECT COUNT(*)
		                             FROM IDIOMAS AS EST
									WHERE ES.NOMBREIDIOMA=EST.NOMBREIDIOMA
									 GROUP BY EST.NOMBREIDIOMA
									 )
	     
		  			        )  )
  BEGIN
    ROLLBACK TRAN
    RAISERROR('EL IDIOMA YA EXISTE', 16, 1)
  END
  --------EJEMPLO-------------------
EXEC AGREGAR_IDIOMA 'ESPAÑOL'
EXEC AGREGAR_IDIOMA 'INGLES'
EXEC AGREGAR_IDIOMA 'JAPONES'
-------------ALTERAR TABLA DISTRIBUIDORES--------------------------------------------------------------
ALTER TABLE DISTRIBUIDORES ADD CONSTRAINT FK_DISTRIBUIDORES_PAIS   FOREIGN KEY(IDPAIS)   REFERENCES PAIS(IDPAIS) ON DELETE NO ACTION ON UPDATE NO ACTION
ALTER TABLE DISTRIBUIDORES ADD CONSTRAINT FK_DISTRIBUIDORES_ESTADO FOREIGN KEY(IDESTADO) REFERENCES ESTADO(IDESTADO) ON DELETE NO ACTION ON UPDATE NO ACTION
ALTER TABLE DISTRIBUIDORES ADD CONSTRAINT FK_DISTRIBUIDORES_CIUDAD FOREIGN KEY(IDCIUDAD) REFERENCES CIUDAD(IDCIUDAD) ON DELETE NO ACTION ON UPDATE NO ACTION
------------------AGREGAR DISTRIBUIDOR----------------------------------------------------------------------
CREATE PROCEDURE AGREGAR_DISTRIBUIDORES @NOMBRE VARCHAR(50),@PAIS VARCHAR(50),@ESTADO VARCHAR(50),@CIUDAD VARCHAR(50) AS

declare @IDPAIS int
    set @IDPAIS=( SELECT P.IDPAIS
	              FROM  PAIS AS P
				  WHERE NOMBRE=@PAIS)

	declare @IDESTADO int
    set @IDESTADO=(SELECT P.IDESTADO
	              FROM  ESTADO AS P
				  WHERE P.NOMBRE=@ESTADO)

	declare @IDCIUDAD int
    set @IDCIUDAD=(SELECT P.IDCIUDAD
	              FROM  CIUDAD AS P
				  WHERE NOMBRE=@CIUDAD)
  INSERT INTO DISTRIBUIDORES(NOMBRE,IDPAIS,IDESTADO,IDCIUDAD) VALUES (UPPER(@NOMBRE),@IDPAIS,@IDESTADO,@IDCIUDAD)
 ---------------------EJEMPLO DISTRIBUIDORES-----------------------------------------------------------------
 EXEC AGREGAR_DISTRIBUIDORES 'VENTAS EUA','MEXICO','TAMAULIPAS','NUEVO LAREDO'

   SELECT *
   FROM DISTRIBUIDORES
  
----------MODIFICAR USUARIO---------------------------------------------------------------------------
 CREATE PROCEDURE MODIFICAR_USUARIO2 @NOMBREDELPERFIL VARCHAR(50),@APPATERNO VARCHAR(20)
	,@APMATERNO VARCHAR(20),@NOMBRE VARCHAR(20),@FECHANACIMIENTO DATE,@CORREO VARCHAR(255)
	,@DESCRIPCION VARCHAR(255),@PAIS VARCHAR(50),@ESTADO VARCHAR(50),@CIUDAD VARCHAR(50),@UBICACIONIMAGEN VARCHAR(50),@IDPERFIL INT AS
	 INSERT INTO IMAGENES(UBICACIONIMAGEN)VALUES (@UBICACIONIMAGEN)
	 declare @IDIMAGEN int
    set @IDIMAGEN=( SELECT TOP 1 P.IDIMAGEN
	                FROM  IMAGENES AS P
				    WHERE P.UBICACIONIMAGEN=@UBICACIONIMAGEN)
				

	declare @IDPAIS int
    set @IDPAIS=( SELECT P.IDPAIS
	              FROM  PAIS AS P
				  WHERE NOMBRE=@PAIS)

	declare @IDESTADO int
    set @IDESTADO=(SELECT P.IDESTADO
	              FROM  ESTADO AS P
				  WHERE P.NOMBRE=@ESTADO)

	declare @IDCIUDAD int
    set @IDCIUDAD=(SELECT P.IDCIUDAD
	              FROM  CIUDAD AS P
				  WHERE NOMBRE=@CIUDAD)

				  UPDATE USUARIOS
                    SET NOMBREPERFIL=UPPER(@NOMBREDELPERFIL),APPATERNO=UPPER(@APPATERNO)
					,APMATERNO=UPPER(@APMATERNO),NOMBRE=UPPER(@NOMBRE),FECHANACIMIENTO=UPPER(@FECHANACIMIENTO)
					,CORREOELECTRONICO=UPPER(@CORREO)
					,DESCRIPCION=UPPER(@DESCRIPCION),IDPAIS=@IDPAIS,IDESTADO=@IDESTADO
					,IDCIUDAD=@IDCIUDAD,IDIMAGEN=@IDIMAGEN
                    WHERE  IDUSUARIO=@IDPERFIL


-------ELIMINAR USUARIO-----------------------------------------
CREATE PROCEDURE ELIMINAR_USUARIO2 @NOMBRE VARCHAR(20) AS
DECLARE @NOMBRE2 INT
SET @NOMBRE2=(SELECT IDUSUARIO
               FROM  USUARIOS
			   WHERE NOMBREPERFIL=@NOMBRE)

DELETE USUARIOS WHERE IDUSUARIO=@NOMBRE2
 ---------------alterar tabla juegos--------------------------------------------------------------------------------
 ALTER TABLE JUEGOS ADD  CANTIDAD INT DEFAULT 1 NOT NULL
 SELECT* FROM JUEGOS
 --------------ALTERAR TABLA VENTAS---------------
 ALTER TABLE VENTAS ADD CANTIDAD INT DEFAULT 1 NOT NULL
 ALTER TABLE VENTAS ADD PRECIO   MONEY DEFAULT 0 NOT NULL

-------------------------------AGREGAR_DESAROLLADOR--------------------------------------
CREATE PROCEDURE AGREGAR_DESARROLADOR @NOMBRE VARCHAR(50),@PAIS VARCHAR(50),@ESTADO VARCHAR(50),@CIUDAD VARCHAR(50)AS

declare @IDPAIS int
    set @IDPAIS=( SELECT P.IDPAIS
	              FROM  PAIS AS P
				  WHERE NOMBRE=@PAIS)

	declare @IDESTADO int
    set @IDESTADO=(SELECT P.IDESTADO
	              FROM  ESTADO AS P
				  WHERE P.NOMBRE=@ESTADO)

	declare @IDCIUDAD int
    set @IDCIUDAD=(SELECT P.IDCIUDAD
	              FROM  CIUDAD AS P
				  WHERE NOMBRE=@CIUDAD)

INSERT INTO DESARROLLADORES(NOMBRE,IDPAIS,IDESTADO,IDCIUDAD) VALUES(@NOMBRE,@IDPAIS,@IDESTADO,@IDCIUDAD)
-----------------------------------------AGREGAR----------------------------------------------------------------------
EXEC AGREGAR_DESARROLADOR 'BUNGIE','MEXICO','TAMAULIPAS','NUEVO LAREDO'
---------------------------------VALIDACION----------------------------------------------------------------------------
CREATE TRIGGER AGREGAR_DESARROLLADOR ON DESARROLLADORES
FOR INSERT,UPDATE 
AS
IF(EXISTS(SELECT ES.NOMBRE
          FROM   inserted AS ES 
          GROUP BY ES.NOMBRE
          HAVING  1 < ANY           (SELECT COUNT(*)
		                             FROM DESARROLLADORES AS EST
									 WHERE ES.NOMBRE=EST.NOMBRE
									 GROUP BY EST.NOMBRE
									 )
	     
		  			        )  )
  BEGIN
    ROLLBACK TRAN
    RAISERROR('EL DESARROLLADOR YA EXISTE', 16, 1)
  END
-------------------------------AGREGAR JUEGOS-------------------------------------------------------------------------------
CREATE PROCEDURE AGREGAR_JUEGO @NOMBRE VARCHAR(100),@FECHALANZAMIENTO DATE,
@NOMBREDESARROLLADOR VARCHAR(50),@NOMBRECLASIFICACION VARCHAR(50),@NOMBREDISTRIBUIDOR VARCHAR(50)
,@PRECIO MONEY,@CANTIDAD INT AS

DECLARE @IDDESARROLLADOR INT
SET @IDDESARROLLADOR=(SELECT IDDESARROLLADOR
                     FROM DESARROLLADORES
					 WHERE NOMBRE=@NOMBREDESARROLLADOR)

DECLARE @IDCLASIFICACION INT
SET @IDCLASIFICACION=(SELECT IDCLASIFICACION
                     FROM CLASIFICACIONES
					 WHERE NOMBRE=@NOMBRECLASIFICACION)

DECLARE @IDDISTRIBUIDOR INT
SET @IDDISTRIBUIDOR=(SELECT IDDISTRIBUIDOR
                     FROM DISTRIBUIDORES
					 WHERE NOMBRE=@NOMBREDISTRIBUIDOR)

INSERT INTO JUEGOS(NOMBRE,FECHALANZAMIENTO,IDDESARROLLADORES,IDCLASIFICACION,IDDISTRIBUIDOR,PRECIO,CANTIDAD)
VALUES(@NOMBRE,@FECHALANZAMIENTO,@IDDESARROLLADOR,@IDCLASIFICACION,@IDDISTRIBUIDOR,@PRECIO,@CANTIDAD)
select cantidad
from juegos
----------------------------@modificarjuego-------------------------------------------------------------
CREATE PROCEDURE MODIFICAR_JUEGO @NOMBRE VARCHAR(100),@FECHALANZAMIENTO DATE,
@NOMBREDESARROLLADOR VARCHAR(50),@NOMBRECLASIFICACION VARCHAR(50),@NOMBREDISTRIBUIDOR VARCHAR(50)
,@PRECIO MONEY,@IDJUEGO INT,@CANTIDAD INT AS
 --DECLARE @IDJUEGO INT
 --SET @IDJUEGO=(SELECT JUE.IDJUEGO
   --            FROM  JUEGOS AS JUE
     --          WHERE JUE.NOMBRE=@NOMBRE)

DECLARE @IDDESARROLLADOR INT
SET @IDDESARROLLADOR=(SELECT IDDESARROLLADOR
                     FROM DESARROLLADORES
					 WHERE NOMBRE=@NOMBREDESARROLLADOR)

DECLARE @IDCLASIFICACION INT
SET @IDCLASIFICACION=(SELECT IDCLASIFICACION
                     FROM CLASIFICACIONES
					 WHERE NOMBRE=@NOMBRECLASIFICACION)

DECLARE @IDDISTRIBUIDOR INT
SET @IDDISTRIBUIDOR=(SELECT IDDISTRIBUIDOR
                     FROM DISTRIBUIDORES
					 WHERE NOMBRE=@NOMBREDISTRIBUIDOR)
                    UPDATE JUEGOS
                    SET NOMBRE=UPPER(@NOMBRE),FECHALANZAMIENTO=UPPER(@FECHALANZAMIENTO)
					,IDDESARROLLADORES=UPPER(@IDDESARROLLADOR),IDCLASIFICACION=UPPER(@IDCLASIFICACION)
					,IDDISTRIBUIDOR=UPPER(@IDDISTRIBUIDOR)
					,PRECIO=UPPER(@PRECIO),CANTIDAD=@CANTIDAD					
                    WHERE  IDJUEGO=@IDJUEGO
----------------------ELIMINAR JUEGO------------------------------------------------------------------------------------
CREATE PROCEDURE ELIMINAR_JUEGO @NOMBRE VARCHAR(20) AS
DECLARE @IDJUEGO INT
SET @IDJUEGO=(SELECT IDJUEGO
               FROM  JUEGOS
			   WHERE NOMBRE=@NOMBRE)

DELETE JUEGOS WHERE IDJUEGO=@IDJUEGO					
--------------------------EJEMPLO----------------------------------------------------------------------------------------
EXEC AGREGAR_JUEGO 'HALO', '7-7-2007','BUNGIE','TODOS','VENTAS EUA','500', '1'
SELECT*FROM JUEGOS
SELECT DESCRIPCION FROM METODOPAGO
----------------------------------VALIDACION---------------------------------------------------------------------------
CREATE TRIGGER AGREGARJUEGO ON JUEGOS
FOR INSERT,UPDATE 
AS
IF(EXISTS(SELECT ES.NOMBRE
          FROM   inserted AS ES 
          GROUP BY ES.NOMBRE
          HAVING  1 < ANY           (SELECT COUNT(*)
		                             FROM JUEGOS AS EST
									WHERE ES.NOMBRE=EST.NOMBRE
									 GROUP BY EST.NOMBRE
									 )
	     
		  			        )  )
  BEGIN
    ROLLBACK TRAN
    RAISERROR('EL JUEGO YA EXISTE', 16, 1)
  END
 --------------VENTA--------------------------------------------------------------------------------------------------
 CREATE PROCEDURE VENTA @METODODEPAGO VARCHAR(50),@NOMBREUSUARIO VARCHAR(100),@CANTIDAD INT,@PRECIO MONEY,@NOMBREJUEGO VARCHAR(50)AS
 
 DECLARE @IDMETODODEPAGO INT
 SET @IDMETODODEPAGO=(SELECT MET.IDMETODOPAGO
                      FROM METODOPAGO AS MET
					  WHERE MET.DESCRIPCION=@METODODEPAGO )

 DECLARE @IDUSUARIO INT
 SET @IDUSUARIO=(SELECT MET.IDUSUARIO
                      FROM USUARIOS AS MET
					  WHERE MET.NOMBREPERFIL=@NOMBREUSUARIO )

 DECLARE @IDNOMBREJUEGO INT
 SET @IDNOMBREJUEGO=(SELECT MET.IDJUEGO
                      FROM JUEGOS AS MET
					  WHERE MET.NOMBRE=@NOMBREJUEGO )
DECLARE @FECHA DATE
SET @FECHA=GETDATE()

INSERT INTO VENTAS(IDMETODOPAGO,IDUSUARIO,CANTIDAD,PRECIO,FECHAVENTA) VALUES(@IDMETODODEPAGO,@IDUSUARIO,@CANTIDAD,@PRECIO,@FECHA)

DECLARE @IDVENTA INT
SET @IDVENTA=(SELECT VEN.IDVENTA
              FROM VENTAS AS VEN
			  WHERE  VEN.PRECIO=@PRECIO AND VEN.IDMETODOPAGO=@IDMETODODEPAGO AND VEN.IDUSUARIO=@IDUSUARIO AND VEN.CANTIDAD=@CANTIDAD AND FECHAVENTA=@FECHA)

INSERT INTO VENTAS_JUEGOS(IDJUEGO,IDVENTA)VALUES(@IDNOMBREJUEGO,@IDVENTA)

                    UPDATE JUEGOS
                    SET    cantidad=cantidad-@CANTIDAD		
                    WHERE  IDJUEGO=@IDNOMBREJUEGO
 ---------------------------------------------------------------------------------------------------------------------------
 EXEC VENTA 'EFECTIVO','Memoboy262',2,'300.00',HALO
 --------------------------------------------------------------MUGRERO------------------------
--select US.NOMBREPERFIL,US.APPATERNO,US.APMATERNO,US.NOMBRE,US.FECHANACIMIENTO,US.CORREOELECTRONICO,US.DESCRIPCION,PA.NOMBRE AS PAIS,EST.NOMBRE AS ESTADO,CIU.NOMBRE AS CIUDAD,IM.UBICACIONIMAGEN,US.IDUSUARIO from USUARIOS AS US JOIN PAIS AS PA ON(PA.IDPAIS=US.IDPAIS) JOIN ESTADO AS EST ON(EST.IDESTADO=US.IDESTADO) JOIN CIUDAD AS CIU ON(CIU.IDCIUDAD=US.IDCIUDAD) JOIN IMAGENES AS IM  ON(IM.IDIMAGEN=US.IDIMAGEN) where US.NOMBREPERFIL='A';

select NOMBREPERFIL FROM USUARIOS

/*select US.NOMBREPERFIL,US.APPATERNO,US.APMATERNO,US.NOMBRE,
US.FECHANACIMIENTO,US.CORREOELECTRONICO,US.DESCRIPCION,PA.NOMBRE AS PAIS
,EST.NOMBRE AS ESTADO,CIU.NOMBRE AS CIUDAD,IM.UBICACIONIMAGEN,US.IDUSUARIO from USUARIOS AS US JOIN PAIS AS PA ON(PA.IDPAIS=US.IDPAIS) JOIN ESTADO AS EST ON(EST.IDESTADO=US.IDESTADO)
 JOIN CIUDAD AS CIU ON(CIU.IDCIUDAD=US.IDCIUDAD) JOIN IMAGENES AS IM  ON(IM.IDIMAGEN=US.IDIMAGEN) where US.NOMBREPERFIL=*/

 SELECT PRECIO FROM JUEGOS WHERE NOMBRE='HALO'

 SELECT JUE.NOMBRE,JUE.FECHALANZAMIENTO,DES.NOMBRE AS DESCRIPCION,CLA.NOMBRE AS CLASIFICACION,DIS.NOMBRE AS DISTRIBUIDOR,JUE.PRECIO
 FROM JUEGOS AS JUE 
 JOIN DESARROLLADORES AS DES ON(JUE.IDDESARROLLADORES=DES.IDDESARROLLADOR)
 JOIN CLASIFICACIONES AS CLA ON(JUE.IDCLASIFICACION=CLA.IDCLASIFICACION)
 JOIN DISTRIBUIDORES AS DIS  ON(JUE.IDDISTRIBUIDOR=DIS.IDDISTRIBUIDOR)
 WHERE JUE.NOMBRE='HALO'

EXEC AGREGAR_PAIS 'Alemania'
EXEC AGREGAR_PAIS 'Argentina'
EXEC AGREGAR_PAIS 'Brasil'
EXEC AGREGAR_PAIS 'Canadá'
EXEC AGREGAR_PAIS 'China'
EXEC AGREGAR_PAIS 'Corea del Norte'
EXEC AGREGAR_PAIS 'Corea del Sur'
EXEC AGREGAR_PAIS 'España'
EXEC AGREGAR_PAIS 'Francia'
EXEC AGREGAR_PAIS 'Guatemala'
EXEC AGREGAR_PAIS 'Italia'
EXEC AGREGAR_PAIS 'Japón'
EXEC AGREGAR_PAIS 'Rusia'
EXEC AGREGAR_PAIS 'Venezuela'


EXEC AGREGAR_PAIS_ESTADO 14,7
EXEC AGREGAR_ESTADO 'KANSAI', 'KNS'
EXEC AGREGAR_ESTADO_CIUDAD 7,8
EXEC AGREGAR_CIUDAD 'KYOTO'

EXEC AGREGAR_CIUDAD 'NUEVA YORK'

EXEC AGREGAR_ESTADO 'NUEVA YORK', 'NY'

EXEC AGREGAR_PAIS_ESTADO 2,8
EXEC AGREGAR_ESTADO_CIUDAD 8,9

EXEC AGREGAR_CIUDAD 'REDWOOD CITY'
EXEC AGREGAR_ESTADO_CIUDAD 6,10

EXEC AGREGAR_ESTADO 'WASHINGTON', 'DC'
EXEC AGREGAR_CIUDAD 'KIRKLAND'

EXEC AGREGAR_PAIS_ESTADO 2,9
EXEC AGREGAR_ESTADO_CIUDAD 9,11

EXEC AGREGAR_DESARROLADOR 'Nintendo', 'Japón', 'kansai', 'kyoto'
EXEC AGREGAR_DISTRIBUIDORES 'Nintendo','Japón','kansai', 'kyoto'

SELECT *
FROM VENTAS

select ven.IDVENTA,VEN.FECHAVENTA,MET.DESCRIPCION,USU.NOMBREPERFIL AS[NOMBRE PERFIL],JUE.NOMBRE AS [NOMBRE DEL JUEGO],VEN.CANTIDAD AS [TOTAL DE COPIAS],VEN.PRECIO AS[PRECIO POR UNIDAD],VEN.CANTIDAD*VEN.PRECIO AS [TOTAL DE LA VENTA]
from ventas AS ven
join METODOPAGO AS MET ON (MET.IDMETODOPAGO=VEN.IDMETODOPAGO)
JOIN USUARIOS AS USU ON(USU.IDUSUARIO=VEN.IDUSUARIO)
JOIN VENTAS_JUEGOS AS VENTJUE ON(ven.IDVENTA=VENTJUE.IDVENTA)
JOIN JUEGOS AS JUE ON(VENTJUE.IDJUEGO=JUE.IDJUEGO)
ORDER BY VEN.FECHAVENTA

SELECT SUM(ven.CANTIDAD*ven.PRECIO) AS TOTAL
FROM VENTAS as ven
join USUARIOS as usu on(ven.IDUSUARIO=usu.IDUSUARIO)
where usu.NOMBREPERFIL='p11'


select ven.IDVENTA,VEN.FECHAVENTA,MET.DESCRIPCION,USU.NOMBREPERFIL AS[NOMBRE PERFIL],JUE.NOMBRE AS [NOMBRE DEL JUEGO],VEN.CANTIDAD AS [TOTAL DE COPIAS],VEN.PRECIO AS[PRECIO POR UNIDAD],VEN.CANTIDAD*VEN.PRECIO AS [TOTAL DE LA VENTA] from ventas AS ven join METODOPAGO AS MET ON (MET.IDMETODOPAGO=VEN.IDMETODOPAGO) JOIN USUARIOS AS USU ON(USU.IDUSUARIO=VEN.IDUSUARIO) JOIN VENTAS_JUEGOS AS VENTJUE ON(ven.IDVENTA=VENTJUE.IDVENTA) JOIN JUEGOS AS JUE ON(VENTJUE.IDJUEGO=JUE.IDJUEGO) WHERE USU.NOMBREPERFIL='P11'
--select ven.IDVENTA,VEN.FECHAVENTA,MET.DESCRIPCION,USU.NOMBREPERFIL AS[NOMBRE PERFIL],JUE.NOMBRE AS [NOMBRE DEL JUEGO],VEN.CANTIDAD AS [TOTAL DE COPIAS],VEN.PRECIO AS[PRECIO POR UNIDAD],VEN.CANTIDAD*VEN.PRECIO AS [TOTAL DE LA VENTA] from ventas AS ven join METODOPAGO AS MET ON (MET.IDMETODOPAGO=VEN.IDMETODOPAGO) JOIN USUARIOS AS USU ON(USU.IDUSUARIO=VEN.IDUSUARIO) JOIN VENTAS_JUEGOS AS VENTJUE ON(ven.IDVENTA=VENTJUE.IDVENTA) JOIN JUEGOS AS JUE ON(VENTJUE.IDJUEGO=JUE.IDJUEGO) WHERE ven.FECHAVENTA=

SELECT SUM(ven.CANTIDAD*ven.PRECIO) AS TOTAL FROM VENTAS as ven join USUARIOS as usu on(ven.IDUSUARIO = usu.IDUSUARIO) WHERE ven.FECHAVENTA=GETDATE()